# vim: fdm=marker foldmarker=▼,▲ foldenable foldlevel=0 ft=zsh

# ▼ Oh My Zsh

# ▼ Oh My Zsh settings

# Path to your oh-my-zsh installation.
export ZSH="{{ .chezmoi.homeDir }}/.oh-my-zsh"

zstyle ':omz:plugins:eza' 'dirs-first' yes

# ▼ Plugins
# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    aliases
    brew
    colorize
    eza
    gh
    git
    golang
    macos
    node
    npm
    nvm
    pyenv
    vi-mode
    wd
    zoxide
)
# ▲

# ▲

# Initialize Oh My Zsh
source $ZSH/oh-my-zsh.sh

# ▲

# ▼ conda
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('{{.chezmoi.homeDir}}/miniforge/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "{{.chezmoi.homeDir}}/miniforge/base/etc/profile.d/conda.sh" ]; then
        . "{{.chezmoi.homeDir}}/miniforge/base/etc/profile.d/conda.sh"
    else
        export PATH="{{.chezmoi.homeDir}}/miniforge/base/bin:$PATH"
    fi
fi
unset __conda_setup

if [ -f "{{.chezmoi.homeDir}}/miniforge/base/etc/profile.d/mamba.sh" ]; then
    . "{{.chezmoi.homeDir}}/miniforge/base/etc/profile.d/mamba.sh"
fi
# <<< conda initialize <<<


# ▲

# ▼ FZM

# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)
# ▲

# ▼ My personal configuration

# TODO: Add a custom welcome banner
# TODO: Add a custom welcome message

# ▼ Command history settings
# Histfile is set in /etc/zshrc to $ZDOTDIR/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
# ▲

# ▼ If conda environment is active, set conda bin path first in PATH
if [[ -v CONDA_DEFAULT_ENV ]]; then
  path=($CONDA_PREFIX/bin $path)
  typeset -U PATH path
  export PATH
fi

# ▲

# ▼ Set some important path variables

# Add go binaries to path
path+=$(go env GOPATH)/bin

# Add ~/.local/bin to path
path+=~/.local/bin


export PATH

export GOBIN=$HOME/.local/bin


# ▲

# ▼ Personal aliases

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

# ▼ NORMAL ALIASES
alias nvs="nvim --listen /tmp/nvimsocket"
alias vim="nvim"
alias oldvim="\vim"
alias vimdiff="nvim -d"
alias zshconf="chezmoi edit --apply ~/.config/zsh/.zshrc"
alias vimconf="chezmoi edit --apply ~/.config/nvim"
alias cm="chezmoi"
alias cms="chezmoi status"
alias cme="chezmoi edit --apply"
alias tree="tree -C"
# Requires trash-cli to be in path.
# See: https://github.com/sindresorhus/trash-cli
alias rm="trash"
# Enable or disable sleep in battery mode 
# when the lid is closed (requires root permission)
alias sleepoff="sudo pmset -b disablesleep 1"
alias sleepon="sudo pmset -b disablesleep 0"

# gls requires 'coreutils' to be installed with homebrew.
# See: https://formulae.brew.sh/formula/coreutils
# alias l="gls -1Fh --color --group-directories-first"
# alias ll="gls -lFh --color --group-directories-first"
# alias la="gls -lAFh --color --group-directories-first"
alias clr="clear"
alias home="cd ~"
alias zr="omz reload"
alias v="fd --type f --hidden --follow --exclude .git | fzf --reverse --preview 'bat --color=always {}' | xargs nvim --listen /tmp/nvimsocket"
alias pn=pnpm
# ▲
#
# ▼ GLOBAL ALIASES
alias -g L="| less"
alias -g J="| jq"
# ▲

# ▼ FUNCTION ALIASES
function dnd(){
  echo $1 $2 | shortcuts run "Sett fokus" | cat
}

# use gitignore.io from command line, e.g. `gi java,python >> .gitignore`
function gi() { curl -sLw n https://www.toptal.com/developers/gitignore/api/$@ ;}
# ▲
# ▲

# ▼ Set TTY for GPG-Agent
# Reference: https://www.gnupg.org/documentation/manuals/gnupg/Invoking-GPG_002dAGENT.html
GPG_TTY=$(tty)
export GPG_TTY
# ▲

# ▼ Other variables

export MANPAGER='nvim +Man!'
export OBSIDIANPATH="~/Library/Mobile Documents/iCloud~md~obsidian/Documents/"

# ▲

# ▲

# ▼ zsh-syntax-highlighting
source $(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# ▲

# ▼ zsh-autosuggestions
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# ▼2 ZSH_AUTOSUGGEST settings
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#ffaa00"
ZSH_AUTOSUGGEST_STRATEGY=(history completion)
# ▲2

# ▲

# ▼ Starship prompt


if (( $+commands[starship] )); then
  export STARSHIP_CONFIG=${XDG_CONFIG_HOME}/starship/starship.toml
  eval "$(starship init zsh)"
else
  echo 'could not initialize starship prompt: starship was not found. Please install starship first. See: https://starship.rs/guide/#%F0%9F%9A%80-installation' >&2
fi

# ▲
