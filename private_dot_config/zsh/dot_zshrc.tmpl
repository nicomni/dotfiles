# vim: fdm=marker foldmarker=▼,▲ foldenable ft=zsh

# ▼ Powerlevel10k

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# ▲

# ▼ Oh My Zsh

# ▼ Oh My Zsh settings

# Path to your oh-my-zsh installation.
export ZSH="{{ .chezmoi.homeDir }}/.oh-my-zsh"

# ▼ Plugins
# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git gh macos brew pyenv wd colorize
  aliases common-aliases nvm npm node golang vi-mode)


# ▲

# ▼ Theme
# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
#ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )
# ▲

# ▼ Other settings
# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# To make Homebrew's completions available in zsh, you mus get the
# Homebrew-managed zsh site-functions on your FPATH before initialising zsh's
# completion facility.
# Note: If you are using Oh My Zsh, it will call compinit for you, so this must
# be done before you call oh-my-zsh.sh. This may be done by appending the
# following line to your ~/.zprofile after Homebrew's initialization:
# Reference:
# https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh
#FPATH=$({{- if eq .chezmoi.arch "arm64" -}}/opt/homebrew{{- else -}}/usr/local{{- end -}}/bin/brew --prefix)/share/zsh/site-functions:$FPATH
# the omz plugin brew does the above

# ▲ Other settings

# ▲

# Initialize Oh My Zsh
source $ZSH/oh-my-zsh.sh

# ▲

# ▼ conda
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('{{.chezmoi.homeDir}}/miniforge/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "{{.chezmoi.homeDir}}/miniforge/base/etc/profile.d/conda.sh" ]; then
        . "{{.chezmoi.homeDir}}/miniforge/base/etc/profile.d/conda.sh"
    else
        export PATH="{{.chezmoi.homeDir}}/miniforge/base/bin:$PATH"
    fi
fi
unset __conda_setup

if [ -f "{{.chezmoi.homeDir}}/miniforge/base/etc/profile.d/mamba.sh" ]; then
    . "{{.chezmoi.homeDir}}/miniforge/base/etc/profile.d/mamba.sh"
fi
# <<< conda initialize <<<


# ▲

# ▼ FZM
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# ▲

# ▼ My personal configuration

# ▼ Command history settings
# Histfile is set in /etc/zshrc to $ZDOTDIR/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
# ▲

# ▼ If conda environment is active, set conda bin path first in PATH
if [[ -v CONDA_DEFAULT_ENV ]]; then
  path=($CONDA_PREFIX/bin $path)
  typeset -U PATH path
  export PATH
fi

# ▲

# ▼ Set some important path variables

# Add go binaries to path
path+=$(go env GOPATH)/bin

# Add ~/.local/bin to path
path+=~/.local/bin


export PATH

export GOBIN=$HOME/.local/bin


# ▲

# ▼ Personal aliases

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

# ▼ NORMAL ALIASES
alias nvs="nvim --listen /tmp/nvimsocket"
alias vim="nvim"
alias oldvim="\vim"
alias vimdiff="nvim -d"
alias zshconf="chezmoi edit ~/.config/zsh/.zshrc"
alias vimconf="chezmoi edit ~/.config/nvim/init.lua"
alias yabaiconf="chezmoi edit ~/.config/yabai/yabairc"
alias skhdconf="chezmoi edit ~/.config/skhd/skhdrc"
alias cm="chezmoi"
alias cms="chezmoi status"
alias cme="chezmoi edit"
alias tree="tree -C"
# Requires trash-cli to be in path.
# See: https://github.com/sindresorhus/trash-cli
alias rm="trash"
# Enable or disable sleep in battery mode 
# when the lid is closed (requires root permission)
alias sleepoff="sudo pmset -b disablesleep 1"
alias sleepon="sudo pmset -b disablesleep 0"
# gls requires 'coreutils' to be installed with homebrew.
# See: https://formulae.brew.sh/formula/coreutils
alias l="gls -1Fh --color --group-directories-first"
alias ll="gls -lFh --color --group-directories-first"
alias la="gls -lAFh --color --group-directories-first"
alias clr="clear"
alias home="cd ~"
alias zr="omz reload"
alias v="fd --type f --hidden --follow --exclude .git | fzf --reverse --preview 'bat --color=always {}' | xargs nvim --listen /tmp/nvimsocket"
alias pn=pnpm
# ▲
#
# ▼ GLOBAL ALIASES
alias -g L="| less"
alias -g J="| jq"
# ▲

# ▼ FUNCTION ALIASES
function dnd(){
  echo $1 $2 | shortcuts run "Sett fokus" | cat
}

# use gitignore.io from command line, e.g. `gi java,python >> .gitignore`
function gi() { curl -sLw n https://www.toptal.com/developers/gitignore/api/$@ ;}
# ▲
# ▲

# ▼ Set TTY for GPG-Agent
# Reference: https://www.gnupg.org/documentation/manuals/gnupg/Invoking-GPG_002dAGENT.html
GPG_TTY=$(tty)
export GPG_TTY
# ▲

# ▼ Other variables

export MANPAGER='nvim +Man!'

# ▲

# ▲

# ▼ zsh-syntax-highlighting
source $(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# ▲

# ▼ zsh-autosuggestions
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# ▼2 ZSH_AUTOSUGGEST settings
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#ffaa00"
ZSH_AUTOSUGGEST_STRATEGY=(history completion)
# ▲2

# ▲
